---
# Sample Zuul configuration

zuul:
  ignored-headers: Access-Control-Allow-Credentials, Access-Control-Allow-Origin
  addProxyHeaders: true

  # Decides to checkhead the token.
  iam-authentication: true

  # Key to determine if the token's signature is correct.
  # It must be the same key that IAM used to issue the token.
  # Copy and paste from your IAM's iam.jwt.key
  iam-jwt-key: my-jwt-encrypt-key-my-jwt-encrypt-key

  # 메타데이터 암호화 키
  metadata-encoder-secret1: Bar12345Bar12345
  metadata-encoder-secret2: ThisIsASecretKet

  # 복호화 할 메타데이터 필드.
  secure-metadata-fields:
    - "$.gitlabToken"

  routes:
    order:
      path: /orders/**
      serviceId: order-service
      stripPrefix: false
      # List of scopes needed for this path
      iam-scopes:
        - guest/GET
        - catalog-order/PUT-PATCH-POST-DELETE

    # If no iam-scopes, all request will be passed.
    customer:
      path: /customers/**
      serviceId: customer-service
      stripPrefix: false


    item:
      path: /items/**
      serviceId: order-service
      stripPrefix: false
      iam-scopes:
        - guest/GET
        - catalog-manage/PUT-PATCH-POST-DELETE

ribbon:
  # Max number of retries on the same server (excluding the first try)
  MaxAutoRetries: 1

  # Max number of next servers to retry (excluding the first server)
  MaxAutoRetriesNextServer: 1

  # Whether all operations can be retried for this client
  OkToRetryOnAllOperations: true

  # Interval to refresh the server list from the source
  ServerListRefreshInterval: 2000

  # Connect timeout used by Apache HttpClient
  ConnectTimeout: 3000

  # Read timeout used by Apache HttpClient
  ReadTimeout: 3000

  # Initial list of servers, can be changed via Archaius dynamic property at runtime
  #listOfServers: www.microsoft.com:80,www.yahoo.com:80,www.google.com:80


## When your api call is over than timeoutInMilliseconds, api would be fallback.
#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 5000
#
#turbine:
#  # set services which registered in eureka server.
#  appConfig: order-service,customer-service
#
#  # You can monitor by application profile.
#  # stream url is hosted on zuul server, with parameter "cluster=[profile]"
#  # ex) http://localhost:8080/turbine.stream?cluster=local
#  aggregator:
#      clusterConfig: local,dev,stg,prod
#  clusterNameExpression: metadata['profile']